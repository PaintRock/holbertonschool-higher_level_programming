=============================
The "2-matrix_divided" module
=============================

Using matrix_divided: This function return the
matrix with the origin list divided in one divisor

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1.55, 2, 3], [4.33, 5, 6.55]], 3)
[[0.52, 0.67, 1.0], [1.44, 1.67, 2.18]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -2.5)
[[-0.4, -0.8, -1.2], [-1.6, -2.0, -2.4]]

>>> matrix_divided([[1, 2]], 3)
Traceback(most recent call last)
...
TypeError: matrix must be a matrix (list of list) of integers/floats

>>> matrix_divided([1, [4, 5, 6]], 2)
Traceback(most recent call last)
...
TypeError: matrix must be a matrix (list of list) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
Traceback(most recent call last)
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], '5')
Traceback(most recent call last)
...
TyperError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback(most recent call last)
...
TypeError: division by zero
